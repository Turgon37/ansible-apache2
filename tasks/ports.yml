---
- name: Create _apache2__listen_http variable for undefined hosts vhosts
  set_fact:
    _apache2__listen_http: "{{ _apache2__listen_http | default([]) }} + [ '80' ]"
  with_dict: '{{ apache2__virtual_hosts }}'
  when: item.value.https is not defined and item.value.hosts is not defined
  tags: ['apache2']

- name: Create _apache2__listen_https variable for undefined hosts vhosts
  set_fact:
    _apache2__listen_https: "{{ _apache2__listen_https | default([]) }} + [ '443' ]"
  with_dict: '{{ apache2__virtual_hosts }}'
  when: item.value.https is defined and item.value.hosts is not defined
  tags: ['apache2']

- name: Create _apache2__listen_http variable for defined hosts vhosts of type string
  set_fact:
    _apache2__listen_http: "{{ _apache2__listen_http | default([]) }} + [ '{{ item.value.hosts }}' ]"
  with_dict: '{{ apache2__virtual_hosts }}'
  when: item.value.hosts is defined and item.value.hosts is string
  tags: ['apache2']

- name: Create _apache2__listen_http variable for defined hosts vhosts of type iterable
  set_fact:
    _apache2__listen_http: "{{ _apache2__listen_http | default([]) }} {% for host in item.value.hosts %}{% if host is string %} + [ '{{ host }}' ]{% elif host is mapping %} + [ '{{ host.ip }}:{{ host.port | d(443 if item.value.https is defined else 80) }}' ] {% endif %}{% endfor %}"
  with_dict: '{{ apache2__virtual_hosts }}'
  when: item.value.hosts is defined and item.value.hosts is not string and item.value.hosts is iterable and item.value.https is not defined
  tags: ['apache2']

- name: Create _apache2__listen_https variable for defined hosts vhosts of type iterable
  set_fact:
    _apache2__listen_https: "{{ _apache2__listen_https | default([]) }} {% for host in item.value.hosts %}{% if host is string %} + [ '{{ host }}' ]{% elif host is mapping %} + [ '{{ host.ip }}:{{ host.port | d(443 if item.value.https is defined else 80) }}' ] {% endif %}{% endfor %}"
  with_dict: '{{ apache2__virtual_hosts }}'
  when: item.value.hosts is defined and item.value.hosts is not string and item.value.hosts is iterable and item.value.https is defined
  tags: ['apache2']

- name: Configure Apache listen ports.
  template:
    src: 'ports.conf.j2'
    dest: '{{ apache2__server_root }}/ports.conf'
    owner: 'root'
    group: 'root'
    mode: '0644'
    #validate: 'apache2 -t -f {{ apache2__main_configuration }}'
  notify: [ 'test apache configuration and restart' ]
  tags: ['apache2']
