---

- name: Get installed version of Apache.
  command: /usr/bin/env apache2 -v
  when: ansible_local.apache2 is not defined
  changed_when: false
  check_mode: false
  register: _apache2__version_raw

- name: Create apache2__version variable
  set_fact:
    _apache2__version:
      "{{ _apache2__version_raw.stdout.split()[2].split('/')[1]|trim
      if _apache2__version_raw is not skipped
      else ansible_local.apache2.version_full }}"

- name: "Ensure service group '{{ apache2__service_group }}' is present"
  group:
    name: '{{ apache2__service_group }}'
    system: true
    state: present
  notify: ['restart-apache2']

- name: "Ensure service user '{{ apache2__service_user }}' is present"
  user:
    name: '{{ apache2__service_user }}'
    group: '{{ apache2__service_group }}'
    shell: /sbin/nologin
    home: /nonexistent
    createhome: false
    system: true
    state: present
  notify: ['restart-apache2']

- name: Ensure configuration directories exists
  file:
    path: '{{ item }}'
    owner: root
    group: '{{ apache2__service_group }}'
    mode: 0750
    state: directory
  with_items:
    - '{{ apache2__server_root }}'
    - '{{ apache2__available_modules_include_directory }}'
    - '{{ apache2__enabled_modules_include_directory }}'
    - '{{ apache2__available_sites_include_directory }}'
    - '{{ apache2__enabled_sites_include_directory }}'

- name: Ensure mutex directory exists
  file:
    path: '{{ apache2__mutex_directory }}'
    owner: '{{ apache2__service_user }}'
    group: '{{ apache2__service_group }}'
    mode: 0755
    state: directory

- name: Ensure logging directory exists
  file:
    path: '{{ apache2__log_directory }}'
    owner: root
    mode: 0750
    state: directory

- name: Create custom scripts directory
  file:
    path: '{{ item }}'
    owner: root
    group: root
    mode: 0755
    state: directory
  with_items:
    - '{{ apache2__custom_scripts_directory }}'

- name: Install apache custom scripts
  copy:
    src: 'files/{{ item }}'
    dest: '{{ apache2__custom_scripts_directory }}/{{ item }}'
    owner: root
    group: root
    mode: 0755
  with_items:
    - apache2-server-status.py

- name: Configure listen ports
  template:
    src: ports.conf.j2
    dest: '{{ apache2__server_root }}/ports.conf'
    owner: root
    group: '{{ apache2__service_group }}'
    mode: 0640
  notify: ['restart-apache2']

- name: Include modules subtasks
  import_tasks: configure-modules.yml

- name: Include virtuals hosts subtasks
  import_tasks: configure-sites.yml

- name: Setup main configuration file
  template:
    src: apache2.conf.j2
    dest: '{{ apache2__main_configuration_file }}'
    owner: root
    group: '{{ apache2__service_group }}'
    mode: 0640
    validate: '{{ apache2__configuration_validator }}'
  notify: ['restart-apache2']
